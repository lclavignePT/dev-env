# Dockerfile para ambiente Python
FROM dev-base

USER root

# Instalar dependências do Python
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    python3-dev \
    python3-full \
    pipx \
    && rm -rf /var/lib/apt/lists/*

# Criar diretório para ambientes virtuais com permissões corretas
RUN mkdir -p /home/devuser/.venvs && \
    chown -R devuser:devuser /home/devuser/.venvs

USER devuser
WORKDIR /home/devuser/project

# Criar ambiente virtual para ferramentas Python
RUN mkdir -p ~/.venvs/tools && \
    python3 -m venv ~/.venvs/tools && \
    echo 'export PATH="$HOME/.venvs/tools/bin:$PATH"' >> ~/.zshrc

# Instalar ferramentas no ambiente virtual
RUN ~/.venvs/tools/bin/pip install \
    poetry \
    black \
    pylint \
    mypy \
    pipenv

# Adicionar configurações ao .zshrc
RUN echo '\n# Python configurações' >> ~/.zshrc && \
    echo 'alias python=python3' >> ~/.zshrc && \
    echo 'alias pip=pip3' >> ~/.zshrc && \
    echo 'alias venv="python -m venv ~/.venvs/\$(basename \$(pwd)) && source ~/.venvs/\$(basename \$(pwd))/bin/activate && ln -sfn ~/.venvs/\$(basename \$(pwd)) .venv"' >> ~/.zshrc && \
    echo 'alias activate="if [ -L .venv ]; then source \$(readlink .venv)/bin/activate; elif [ -d .venv ]; then source .venv/bin/activate; else echo \"Ambiente virtual não encontrado\"; fi"' >> ~/.zshrc && \
    echo 'alias poetry="$HOME/.venvs/tools/bin/poetry"' >> ~/.zshrc && \
    echo 'alias black="$HOME/.venvs/tools/bin/black"' >> ~/.zshrc && \
    echo 'alias pylint="$HOME/.venvs/tools/bin/pylint"' >> ~/.zshrc && \
    echo 'alias mypy="$HOME/.venvs/tools/bin/mypy"' >> ~/.zshrc && \
    echo 'alias pipenv="$HOME/.venvs/tools/bin/pipenv"' >> ~/.zshrc

CMD ["zsh"] 